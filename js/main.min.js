var $itemsElement, tags = ["ActionBar", "Button", "Floating"],
items = [
{
	title: "TH-ProgressButton",
	tags: ["Button"],
	author: "torryharris",
	img_url: "https://camo.githubusercontent.com/668e6e5ee84b861907083899c99657a61abe6414/68747470733a2f2f7261772e6769746875622e636f6d2f56797368616b682d4b2f54482d50726f6772657373427574746f6e2f6d61737465722f50726f6772657373427574746f6e2e676966",
	description: "Circular progress View button inspired by FFCircularProgressView",
	github_url: "https://github.com/torryharris/TH-ProgressButton"
},
{
	title: "FancyButtons",
	tags: ["Button"],
	author: "medyo",
	img_url: "https://github.com/medyo/fancybuttons/raw/master/screenshots/fancy2.png",
	description: "FancyButtons, helps you to easily create fancy buttons without the need of drawable files.",
	github_url: "https://github.com/medyo/fancybuttons"
},
{
	title: "FloatingActionButton",
	tags: ["Floating", "Button"],
	author: "makovkastar",
	img_url: "https://github.com/makovkastar/FloatingActionButton/raw/master/art/demo.gif",
	description: "Android Google+ like floating action button which reacts on the list view scrolling events. Becomes visible when the list view is scrolled up and invisible when scrolled down.",
	github_url: "https://github.com/makovkastar/FloatingActionButton"
},
];
$(document).ready(function() {
	addAllTags(),
	addAllItems(),
	setupIsotope(),
	setupFilter(),
	setupSearch()
}),
addAllTags = function() {
	tags.sort();
	for (var t = 0; t < tags.length; t++) $(".filters").append('<button class="btn btn-filter" type="button" data-filter="' + tags[t].replace(/\s/g, "-").toLowerCase() + '">' + tags[t] + "</button>")
},
onImgLoad = function(img){
	if(img.offsetHeight > img.offsetWidth){
		if(img.offsetHeight > 320){
			img.height = 320;
		}else{
			img.height = img.offsetHeight;
		}
	}else{
		if(img.offsetWidth > 450){
			img.width = 450;
		}else{
			img.width = img.offsetWidth;
		}
		img.height = img.offsetHeight * (img.watch / img.offsetWidth);
		img.height = 100;
	}
	img.style.display = "none";
},
addAllItems = function() {
	items.sort(function(t, e) {
		return t.title.toLowerCase() < e.title.toLowerCase() ? -1 : t.title.toLowerCase() > e.title.toLowerCase() ? 1 : 0
	});
	for (var t = 0; t < items.length; t++) {
		item = items[t];
		if (buttonsString = "", item.home_url && (buttonsString += '<a href="' + item.home_url + '" class="btn btn-primary"><i class="fa fa-home"></i> Homepage</a>'), item.github_url && (buttonsString += '<a href="' + item.github_url + '" class="btn btn-primary"><i class="fa fa-github-alt"></i> Github</a>'), item.google_url && (buttonsString += '<a href="' + item.google_url + '" class="btn btn-primary"><i class="fa fa-google"></i> Google Code</a>'), item.bitbucket_url && (buttonsString += '<a href="' + item.bitbucket_url + '" class="btn btn-primary"><i class="fa fa-bitbucket"></i> Bitbucket</a>'), userString = "", item.author && (userString = '<div class="author meta"><i class="fa fa-user"></i> <span class="author">' + item.author + "</span></div>"), tagsString = "", tagsData = "", item.tags && item.tags.length > 0) for (var e = 0; e < item.tags.length; e++) tagsString += item.tags[e],
		tagsData += item.tags[e].replace(/\s/g, "-"),
		e < item.tags.length - 1 && (tagsString += ", ", tagsData += " ");
		imgString='';
		if(item.img_url){
			imgString = '<div class="logo-container"><img onload="" id="logo'+t+'" class="logo" src="'+
			item.img_url+
			'"></img></div>';
			// 加载图片
			
		}
		$("#items").append(
			'<section class="item mix" data-group="' + 
			tagsData + 
			'"><a href="' + 
			(item.home_url ? item.home_url: item.github_url ? item.github_url: item.google_url) + 
			'" class="item-title"><h3>' + 
			item.title + 
			"</h3></a>" + 
			userString + 
			'<div class="tags-container meta"><i class="fa fa-tag"></i> <span class="tags">' + 
			tagsString + 
			'</span></div>'+
			imgString +
			'<div class="description">' + 
			item.description + 
			'</div><div class="buttons-container">' + 
			buttonsString + 
			"</div></section>")
	}
},
setupIsotope = function() {
	$itemsElement = $("#items"),
	$itemsElement.isotope({
		itemSelector: ".item",
		layoutMode: "masonry"
	})
},
setupFilter = function() {
	$(".btn-filter").on("click",
	function() {
		$(".search-input").val(""),
		isActive = $(this).hasClass("active"),
		group = isActive ? "*": $(this).data("filter"),
		isActive || $(".filters .active").removeClass("active"),
		$(this).button("toggle"),
		"*" != group ? $itemsElement.isotope({
			filter: function() {
				return groups = $(this).data("group"),
				-1 !== groups.indexOf(group)
			}
		}) : $itemsElement.isotope({
			filter: group
		})
	})
},
setupSearch = function() {
	$(".search-input").on("keyup change",
	function() {
		var t = this.value.toLowerCase();
		$(".btn-filter").each(function() {
			$(this).hasClass("active") && $(this).button("toggle")
		}),
		$itemsElement.isotope({
			filter: function() {
				var e = $.trim($(this).find(".item-title").text()).toLowerCase(),
				i = $.trim($(this).find(".tags").text()).toLowerCase(),
				o = $.trim($(this).find(".description").text()).toLowerCase(),
				a = $.trim($(this).find(".author").text()).toLowerCase();
				return - 1 !== e.indexOf(t) || -1 !== i.indexOf(t) || -1 !== o.indexOf(t) || -1 !== a.indexOf(t)
			}
		})
	})
};