var $itemsElement, tags = ["ActionBar", "Button", "Floating"],
items = [
{
	title: "FloatingActionButton",
	tags: ["Floating", "Button"],
	author: "James Smith",
	img_url: "https://github.com/makovkastar/FloatingActionButton/raw/master/art/demo.gif",
	description: "An asynchronous callback-based Http client for Android built on top of Apache’s HttpClient libraries. All requests are made outside of your app’s main UI thread, but any callback logic will be executed on the same thread as the callback was created using Android’s Handler message passing. You can also use it in Service or background thread, library will automatically recognize in which context is ran.",
	home_url: "http://loopj.com/android-async-http/",
	github_url: "https://github.com/makovkastar/FloatingActionButton"
}
];
$(document).ready(function() {
	addAllTags(),
	addAllItems(),
	setupIsotope(),
	setupFilter(),
	setupSearch()
}),
addAllTags = function() {
	tags.sort();
	for (var t = 0; t < tags.length; t++) $(".filters").append('<button class="btn btn-filter" type="button" data-filter="' + tags[t].replace(/\s/g, "-").toLowerCase() + '">' + tags[t] + "</button>")
},
addAllItems = function() {
	items.sort(function(t, e) {
		return t.title.toLowerCase() < e.title.toLowerCase() ? -1 : t.title.toLowerCase() > e.title.toLowerCase() ? 1 : 0
	});
	for (var t = 0; t < items.length; t++) {
		if (buttonsString = "", items[t].home_url && (buttonsString += '<a href="' + items[t].home_url + '" class="btn btn-primary"><i class="fa fa-home"></i> Homepage</a>'), items[t].github_url && (buttonsString += '<a href="' + items[t].github_url + '" class="btn btn-primary"><i class="fa fa-github-alt"></i> Github</a>'), items[t].google_url && (buttonsString += '<a href="' + items[t].google_url + '" class="btn btn-primary"><i class="fa fa-google"></i> Google Code</a>'), items[t].bitbucket_url && (buttonsString += '<a href="' + items[t].bitbucket_url + '" class="btn btn-primary"><i class="fa fa-bitbucket"></i> Bitbucket</a>'), userString = "", items[t].author && (userString = '<div class="author meta"><i class="fa fa-user"></i> <span class="author">' + items[t].author + "</span></div>"), tagsString = "", tagsData = "", items[t].tags && items[t].tags.length > 0) for (var e = 0; e < items[t].tags.length; e++) tagsString += items[t].tags[e],
		tagsData += items[t].tags[e].replace(/\s/g, "-"),
		e < items[t].tags.length - 1 && (tagsString += ", ", tagsData += " ");
		$("#items").append(
			'<section class="item mix" data-group="' + 
			tagsData + 
			'"><a href="' + 
			(items[t].home_url ? items[t].home_url: items[t].github_url ? items[t].github_url: items[t].google_url) + 
			'" class="item-title"><h3>' + 
			items[t].title + 
			"</h3></a>" + 
			userString + 
			'<div class="tags-container meta"><i class="fa fa-tag"></i> <span class="tags">' + 
			tagsString + 
			'</span></div>'+
			'<div class="logo"><img height="320" src="'+
			items[t].img_url+
			'"></img></div>'+
			'<div class="description">' + 
			items[t].description + 
			'</div><div class="buttons-container">' + 
			buttonsString + 
			"</div></section>")
	}
},
setupIsotope = function() {
	$itemsElement = $("#items"),
	$itemsElement.isotope({
		itemSelector: ".item",
		layoutMode: "masonry"
	})
},
setupFilter = function() {
	$(".btn-filter").on("click",
	function() {
		$(".search-input").val(""),
		isActive = $(this).hasClass("active"),
		group = isActive ? "*": $(this).data("filter"),
		isActive || $(".filters .active").removeClass("active"),
		$(this).button("toggle"),
		"*" != group ? $itemsElement.isotope({
			filter: function() {
				return groups = $(this).data("group"),
				-1 !== groups.indexOf(group)
			}
		}) : $itemsElement.isotope({
			filter: group
		})
	})
},
setupSearch = function() {
	$(".search-input").on("keyup change",
	function() {
		var t = this.value.toLowerCase();
		$(".btn-filter").each(function() {
			$(this).hasClass("active") && $(this).button("toggle")
		}),
		$itemsElement.isotope({
			filter: function() {
				var e = $.trim($(this).find(".item-title").text()).toLowerCase(),
				i = $.trim($(this).find(".tags").text()).toLowerCase(),
				o = $.trim($(this).find(".description").text()).toLowerCase(),
				a = $.trim($(this).find(".author").text()).toLowerCase();
				return - 1 !== e.indexOf(t) || -1 !== i.indexOf(t) || -1 !== o.indexOf(t) || -1 !== a.indexOf(t)
			}
		})
	})
};